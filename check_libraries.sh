#!/bin/bash

# –°–ø–∏—Å–æ–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
libraries=(
  "python3"
  "git"
  "curl"
  "wget"
  "nginx"
)

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ –∏—Ö –≤–µ—Ä—Å–∏–π..."
echo ""

missing_libraries=()
update_libraries=()

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —É—Ç–∏–ª–∏—Ç
check_dependencies() {
  for cmd in curl jq wget; do
    if ! command -v "$cmd" &> /dev/null; then
      echo -e "${RED}‚ö†Ô∏è –î–ª—è —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è $cmd. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é:${NC}"
      echo "sudo apt update && sudo apt install $cmd"
      exit 1
    fi
  done
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø–∞–∫–µ—Ç–∞ –∏–∑ apt
get_available_apt_version() {
  local package=$1
  if command -v apt-cache &> /dev/null; then
    available_version=$(apt-cache policy "$package" | grep Candidate | awk '{print $2}')
    echo "$available_version"
  else
    echo "–ù/–î"
  fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∞–º–æ–π —Å–≤–µ–∂–µ–π –≤–µ—Ä—Å–∏–∏ –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
get_latest_official_version() {
  local package=$1
  
  case "$package" in
    "python3")
      # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é Python —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞
      latest_version=$(curl -s https://www.python.org/downloads/ | grep -o 'Python [0-9]\+\.[0-9]\+\.[0-9]\+' | head -1 | cut -d' ' -f2)
      echo "$latest_version"
      ;;
    "git")
      # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é Git —Å GitHub
      latest_version=$(curl -s https://api.github.com/repos/git/git/tags | jq -r '.[0].name' | sed 's/v//')
      echo "$latest_version"
      ;;
    "curl")
      # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é curl —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      latest_version=$(curl -s https://api.github.com/repos/curl/curl/releases/latest | jq -r '.tag_name' | sed 's/curl-//' | tr '_' '.')
      echo "$latest_version"
      ;;
    "wget")
      # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é wget —Å GNU 
      latest_version=$(curl -s https://ftp.gnu.org/gnu/wget/ | grep -o 'wget-[0-9]\+\.[0-9]\+\.[0-9]\+\.tar\.gz' | sort -V | tail -1 | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+')
      echo "$latest_version"
      ;;
    "nginx")
      # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é NGINX
      latest_version=$(curl -s https://nginx.org/en/download.html | grep -o 'nginx-[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1 | cut -d'-' -f2)
      echo "$latest_version"
      ;;
    *)
      echo "–ù/–î"
      ;;
  esac
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–µ—Ä—Å–∏–∏
get_security_info() {
  local package=$1
  local version=$2
  
  case "$package" in
    "python3")
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å Python –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ CVE
      security_url="https://www.cvedetails.com/vulnerability-list/vendor_id-10210/product_id-18230/Python-Python.html"
      security_info=$(curl -s "$security_url" | grep -i "$version" | wc -l)
      if [ "$security_info" -gt 0 ]; then
        echo -e "${YELLOW}‚ö†Ô∏è –î–ª—è Python $version –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: $security_url${NC}"
      else
        echo -e "${GREEN}‚úÖ –í–µ—Ä—Å–∏—è Python $version –Ω–µ –∏–º–µ–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π.${NC}"
      fi
      ;;
    "git")
      security_url="https://github.com/git/git/security/advisories"
      echo -e "${BLUE}üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Git: $security_url${NC}"
      ;;
    "curl")
      security_url="https://curl.se/docs/security.html"
      echo -e "${BLUE}üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ curl: $security_url${NC}"
      ;;
    "wget")
      security_url="https://www.cvedetails.com/vulnerability-list/vendor_id-72/product_id-361/GNU-Wget.html"
      echo -e "${BLUE}üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ wget: $security_url${NC}"
      ;;
    "nginx")
      security_url="https://nginx.org/en/security_advisories.html"
      echo -e "${BLUE}üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ NGINX: $security_url${NC}"
      ;;
    *)
      echo -e "${YELLOW}‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è $package –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.${NC}"
      ;;
  esac
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
install_library() {
  local package=$1
  local version_type=$2  # apt, official
  
  echo -e "${BLUE}[*] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $package...${NC}"
  
  case "$version_type" in
    "apt")
      echo -e "${BLUE}[*] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ APT —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
      sudo apt update && sudo apt install -y "$package"
      return $?
      ;;
    "official")
      echo -e "${BLUE}[*] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏...${NC}"
      case "$package" in
        "python3")
          echo -e "${YELLOW}‚ö†Ô∏è –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ Python —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å pyenv –∏–ª–∏ conda.${NC}"
          read -p "–•–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pyenv? (y/n): " choice
          if [[ $choice == "y" || $choice == "Y" ]]; then
            curl -s https://pyenv.run | bash
          fi
          ;;
        "git")
          sudo add-apt-repository -y ppa:git-core/ppa && sudo apt update && sudo apt install -y git
          ;;
        "curl")
          # –°–æ–±–∏—Ä–∞–µ–º –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é curl
          temp_dir=$(mktemp -d)
          latest_version=$(get_latest_official_version "curl")
          cd "$temp_dir" && \
          curl -O "https://curl.se/download/curl-${latest_version}.tar.gz" && \
          tar -xzf "curl-${latest_version}.tar.gz" && \
          cd "curl-${latest_version}" && \
          ./configure && make && sudo make install
          rm -rf "$temp_dir"
          ;;
        "wget")
          # –°–æ–±–∏—Ä–∞–µ–º –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é wget
          temp_dir=$(mktemp -d)
          latest_version=$(get_latest_official_version "wget")
          cd "$temp_dir" && \
          curl -O "https://ftp.gnu.org/gnu/wget/wget-${latest_version}.tar.gz" && \
          tar -xzf "wget-${latest_version}.tar.gz" && \
          cd "wget-${latest_version}" && \
          ./configure && make && sudo make install
          rm -rf "$temp_dir"
          ;;
        "nginx")
          echo -e "${BLUE}[*] –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è NGINX...${NC}"
          curl -s https://nginx.org/keys/nginx_signing.key | sudo apt-key add -
          echo "deb https://nginx.org/packages/mainline/ubuntu/ $(lsb_release -cs) nginx" | sudo tee /etc/apt/sources.list.d/nginx.list
          sudo apt update && sudo apt install -y nginx
          ;;
        *)
          echo -e "${RED}‚ö†Ô∏è –ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ –¥–ª—è $package${NC}"
          return 1
          ;;
      esac
      return $?
      ;;
    *)
      echo -e "${RED}‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –≤–µ—Ä—Å–∏–∏: $version_type${NC}"
      return 1
      ;;
  esac
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏
get_installed_version() {
  local command=$1
  
  case "$command" in
    "python3")
      echo "$($command --version 2>&1 | awk '{print $2}')"
      ;;
    "git")
      echo "$($command --version | awk '{print $3}')"
      ;;
    "curl")
      echo "$($command --version | head -n 1 | awk '{print $2}')"
      ;;
    "wget")
      echo "$($command --version | head -n 1 | awk '{print $3}')"
      ;;
    "nginx")
      echo "$($command -v 2>&1 | head -n 1 | awk -F'/' '{print $2}')"
      ;;
    *)
      echo "$($command --version 2>&1 | head -n 1)"
      ;;
  esac
}

# –§—É–Ω–∫—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é
show_interactive_menu() {
  echo -e "\n${BLUE}======================================================${NC}"
  echo -e "${BLUE}| –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏         |${NC}"
  echo -e "${BLUE}======================================================${NC}"
  echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
  echo -e "1) –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —á–µ—Ä–µ–∑ APT"
  echo -e "2) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É –ø–æ –≤–∞—à–µ–º—É –≤—ã–±–æ—Ä—É"
  echo -e "3) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"
  echo -e "4) –í—ã—Ö–æ–¥"
  
  read -p "–í–∞—à –≤—ã–±–æ—Ä: " menu_choice
  
  case $menu_choice in
    1)
      echo -e "${BLUE}[*] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ —á–µ—Ä–µ–∑ APT...${NC}"
      sudo apt update && sudo apt upgrade -y ${update_libraries[*]}
      ;;
    2)
      echo -e "–î–æ—Å—Ç—É–ø–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:"
      for i in "${!libraries[@]}"; do
        echo "$((i+1))) ${libraries[$i]}"
      done
      
      read -p "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: " lib_num
      if [[ $lib_num -gt 0 && $lib_num -le ${#libraries[@]} ]]; then
        selected_lib=${libraries[$((lib_num-1))]}
        echo -e "–í—ã–±—Ä–∞–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞: $selected_lib"
        echo -e "1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ APT"
        echo -e "2) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é"
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏: " install_choice
        case $install_choice in
          1)
            install_library "$selected_lib" "apt"
            ;;
          2)
            install_library "$selected_lib" "official"
            ;;
          *)
            echo -e "${RED}‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
            ;;
        esac
      else
        echo -e "${RED}‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –±–∏–±–ª–∏–æ—Ç–µ–∫–∏!${NC}"
      fi
      ;;
    3)
      echo -e "–î–æ—Å—Ç—É–ø–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:"
      for i in "${!libraries[@]}"; do
        echo "$((i+1))) ${libraries[$i]}"
      done
      
      read -p "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: " lib_num
      if [[ $lib_num -gt 0 && $lib_num -le ${#libraries[@]} ]]; then
        selected_lib=${libraries[$((lib_num-1))]}
        if command -v "$selected_lib" &> /dev/null; then
          installed_version=$(get_installed_version "$selected_lib")
          get_security_info "$selected_lib" "$installed_version"
        else
          echo -e "${RED}‚ö†Ô∏è –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ $selected_lib –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
        fi
      else
        echo -e "${RED}‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –±–∏–±–ª–∏–æ—Ç–µ–∫–∏!${NC}"
      fi
      ;;
    4)
      echo -e "${GREEN}–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
      exit 0
      ;;
    *)
      echo -e "${RED}‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
      ;;
  esac
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —É—Ç–∏–ª–∏—Ç
check_dependencies

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
for lib in "${libraries[@]}"; do
  if command -v "$lib" &> /dev/null; then
    installed_version=$(get_installed_version "$lib")
    apt_version=$(get_available_apt_version "$lib")
    latest_version=$(get_latest_official_version "$lib")
    
    echo -e "${GREEN}‚úÖ $lib —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–ø—É—Ç—å: $(command -v "$lib"))${NC}"
    echo "   –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è: $installed_version"
    echo "   –î–æ—Å—Ç—É–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è –≤ APT: $apt_version"
    echo "   –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: $latest_version"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ APT
    if [ "$installed_version" != "$apt_version" ] && [ "$apt_version" != "–ù/–î" ]; then
      echo -e "   ${YELLOW}‚ö†Ô∏è –î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ APT!${NC}"
      update_libraries+=("$lib")
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –±–æ–ª–µ–µ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö
    if [ "$installed_version" != "$latest_version" ] && [ "$latest_version" != "–ù/–î" ] && [ "$latest_version" != "" ]; then
      echo -e "   ${BLUE}üîÑ –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è!${NC}"
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    get_security_info "$lib" "$installed_version"
    
    echo ""
  else
    echo -e "${RED}‚ùå $lib –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    missing_libraries+=("$lib")
    
    # –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
    latest_version=$(get_latest_official_version "$lib")
    echo "   –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: $latest_version"
    echo ""
  fi
done

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö
if [ ${#missing_libraries[@]} -eq 0 ]; then
  echo -e "${GREEN}–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${NC}"
else
  echo -e "${YELLOW}–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:${NC}"
  for lib in "${missing_libraries[@]}"; do
    echo "  - $lib"
  done
  
  echo ""
  echo -e "${BLUE}–í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ö —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:${NC}"
  echo "sudo apt update && sudo apt install ${missing_libraries[*]}"
fi

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
if [ ${#update_libraries[@]} -gt 0 ]; then
  echo ""
  echo -e "${YELLOW}–î–æ—Å—Ç—É–ø–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ APT –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫:${NC}"
  for lib in "${update_libraries[@]}"; do
    echo "  - $lib"
  done
  
  echo ""
  echo -e "${BLUE}–í—ã –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –∏—Ö —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã:${NC}"
  echo "sudo apt update && sudo apt upgrade ${update_libraries[*]}"
  echo ""
  echo -e "${YELLOW}–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∞–º—ã–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –≤–µ—Ä—Å–∏–∏,${NC}"
  echo -e "${YELLOW}–≤–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å PPA, snap –∏–ª–∏ —Å–æ–±—Ä–∞—Ç—å –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤.${NC}"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
show_interactive_menu 